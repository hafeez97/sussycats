{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\John\\\\sussycat\\\\src\\\\Components\\\\PhantomConnect.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConnectToPhantom = props => {\n  _s();\n\n  const [phantom, setPhantom] = useState(null);\n  useEffect(() => {\n    if (\"solana\" in window) {\n      setPhantom(window[\"solana\"]);\n    }\n  }, []);\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    phantom === null || phantom === void 0 ? void 0 : phantom.on(\"connect\", () => {\n      setConnected(true);\n    });\n    phantom === null || phantom === void 0 ? void 0 : phantom.on(\"disconnect\", () => {\n      setConnected(false);\n    });\n  }, [phantom]);\n\n  const connectHandler = () => {\n    phantom === null || phantom === void 0 ? void 0 : phantom.connect();\n  };\n\n  const disconnectHandler = () => {\n    phantom === null || phantom === void 0 ? void 0 : phantom.disconnect();\n  };\n\n  if (phantom) {\n    if (connected) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectHandler,\n        className: \"py-2 px-4 border border-purple-700 rounded-md text-sm font-medium text-purple-700 whitespace-nowrap hover:bg-purple-200\",\n        children: \"Disconnect from Phantom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectHandler,\n      children: \"Connect to Phantom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"https://phantom.app/\",\n    target: \"_blank\",\n    children: \"Get Phantom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConnectToPhantom, \"dQQMFXwUhy9A6/+mmeerQD6GOHs=\");\n\n_c = ConnectToPhantom;\nexport default ConnectToPhantom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectToPhantom\");","map":{"version":3,"sources":["D:/work/John/sussycat/src/Components/PhantomConnect.js"],"names":["React","useEffect","useState","ConnectToPhantom","props","phantom","setPhantom","window","connected","setConnected","on","connectHandler","connect","disconnectHandler","disconnect"],"mappings":";;;AAAA,OAAQA,KAAR,MAAmB,OAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,YAAYM,MAAhB,EAAwB;AACtBD,MAAAA,UAAU,CAACC,MAAM,CAAC,QAAD,CAAP,CAAV;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,EAAT,CAAY,SAAZ,EAAuB,MAAM;AAC3BD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD;AAIAJ,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,EAAT,CAAY,YAAZ,EAA0B,MAAM;AAC9BD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD;AAGD,GARQ,EAQN,CAACJ,OAAD,CARM,CAAT;;AAUA,QAAMM,cAAc,GAAG,MAAM;AAC3BN,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEO,OAAT;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BR,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAES,UAAT;AACD,GAFD;;AAIA,MAAIT,OAAJ,EAAa;AACX,QAAIG,SAAJ,EAAe;AACb,0BACE;AACE,QAAA,OAAO,EAAEK,iBADX;AAEE,QAAA,SAAS,EAAC,yHAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD;;AAED,wBACE;AACE,MAAA,OAAO,EAAEF,cADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,sBACE;AACE,IAAA,IAAI,EAAC,sBADP;AAEE,IAAA,MAAM,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA3DD;;GAAMR,gB;;KAAAA,gB;AA6DN,eAAeA,gBAAf","sourcesContent":["import  React from \"react\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nconst ConnectToPhantom = (props) => {\r\n  const [phantom, setPhantom] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (\"solana\" in window) {\r\n      setPhantom(window[\"solana\"]);\r\n    }\r\n  }, []);\r\n\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    phantom?.on(\"connect\", () => {\r\n      setConnected(true);\r\n    });\r\n\r\n    phantom?.on(\"disconnect\", () => {\r\n      setConnected(false);\r\n    });\r\n  }, [phantom]);\r\n\r\n  const connectHandler = () => {\r\n    phantom?.connect();\r\n  };\r\n\r\n  const disconnectHandler = () => {\r\n    phantom?.disconnect();\r\n  };\r\n\r\n  if (phantom) {\r\n    if (connected) {\r\n      return (\r\n        <button\r\n          onClick={disconnectHandler}\r\n          className=\"py-2 px-4 border border-purple-700 rounded-md text-sm font-medium text-purple-700 whitespace-nowrap hover:bg-purple-200\"\r\n        >\r\n          Disconnect from Phantom\r\n        </button>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <button\r\n        onClick={connectHandler}\r\n\r\n      >\r\n        Connect to Phantom\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <a\r\n      href=\"https://phantom.app/\"\r\n      target=\"_blank\"\r\n    >\r\n      Get Phantom\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default ConnectToPhantom;"]},"metadata":{},"sourceType":"module"}