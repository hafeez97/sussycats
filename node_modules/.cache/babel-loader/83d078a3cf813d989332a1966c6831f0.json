{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\John\\\\vikings\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Sound from 'react-sound';\nimport Valhalla from './assets/valhalla.mp3';\nimport ValhallaMetal from './assets/valhalla_metal.mp3';\nimport { ethers } from 'ethers';\nimport './App.css'; // Components\n\nimport LoadingIndicator from './Components/LoadingIndicator';\nimport metaVikings from './utils/Vikings.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // State\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [characterNFT, setCharacterNFT] = useState(null);\n  const [metaMaskMsg, setMetaMaskMsg] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [isMetal, setIsMetal] = useState(true); // Actions\n\n  const checkIfWalletIsConnected = async () => {\n    console.log(\"check if wallet is connected\");\n  };\n  /*\r\n   * Implement your connectWallet method here\r\n   */\n\n\n  const connectWalletAction = async () => {\n    console.log(\"connect wallet action\");\n  }; // Render Methods\n\n\n  const renderContent = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }, this);\n    }\n    /*\r\n     * Scenario #1\r\n     */\n\n\n    if (!currentAccount) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button connect-wallet-button\",\n          onClick: connectWalletAction,\n          children: \"CONNECT WALLET TO PLAY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this);\n      /*\r\n       * Scenario #2\r\n       */\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    checkIfWalletIsConnected();\n  }, []);\n  /*\r\n  * Add this useEffect right under the other useEffect where you are calling checkIfWalletIsConnected\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sound-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sound-toggle\",\n          onClick: () => setIsPlaying(!isPlaying ? true : false),\n          children: isPlaying ? '🔊' : '🔇'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sound-toggle-no-animation\",\n          onClick: () => setIsMetal(!isMetal ? true : false),\n          children: isMetal ? '🎸' : '🪕'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sound-toggle-no-animation\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://testnets.opensea.io/collection/vikings-v4\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"\\u26F5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sound-toggle-no-animation\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/ankurdaharwal/vikings\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: metaMaskMsg ? 'You need MetaMask to play!' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header glow-text gradient-text\",\n        children: [\"Vikings\", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"Fight For Valhalla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), renderContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sound, {\n      url: isMetal ? ValhallaMetal : Valhalla,\n      playStatus: isPlaying ? Sound.status.PLAYING : Sound.status.STOPPED,\n      volume: 20,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), \"\\xA9 2021 Vikings Created with \\uD83D\\uDD25 by \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"An1cu12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"IzKjSArndMt3rIs1xf4AyScWABY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/work/John/vikings/src/App.js"],"names":["React","useEffect","useState","Sound","Valhalla","ValhallaMetal","ethers","LoadingIndicator","metaVikings","App","currentAccount","setCurrentAccount","characterNFT","setCharacterNFT","metaMaskMsg","setMetaMaskMsg","isLoading","setIsLoading","isPlaying","setIsPlaying","isMetal","setIsMetal","checkIfWalletIsConnected","console","log","connectWalletAction","renderContent","status","PLAYING","STOPPED"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport Sound from 'react-sound';\r\nimport Valhalla from './assets/valhalla.mp3';\r\nimport ValhallaMetal from './assets/valhalla_metal.mp3';\r\n\r\nimport { ethers } from 'ethers';\r\nimport './App.css';\r\n\r\n// Components\r\nimport LoadingIndicator from './Components/LoadingIndicator';\r\n\r\nimport metaVikings from './utils/Vikings.json';\r\n\r\n\r\nconst App = () => {\r\n\r\n// State\r\nconst [currentAccount, setCurrentAccount] = useState(null);\r\nconst [characterNFT, setCharacterNFT] = useState(null);\r\nconst [metaMaskMsg, setMetaMaskMsg] = useState(false);\r\nconst [isLoading, setIsLoading] = useState(false);\r\nconst [isPlaying, setIsPlaying] = useState(true);\r\nconst [isMetal, setIsMetal] = useState(true);\r\n\r\n  // Actions\r\n  const checkIfWalletIsConnected = async () => {\r\n    console.log(\"check if wallet is connected\");\r\n  };\r\n\r\n  /*\r\n   * Implement your connectWallet method here\r\n   */\r\n  const connectWalletAction = async () => {\r\n    console.log(\"connect wallet action\");\r\n  };\r\n\r\n  // Render Methods\r\nconst renderContent = () => {\r\n\r\n  if (isLoading) {\r\n    return <LoadingIndicator />;\r\n  }\r\n  \r\n  /*\r\n   * Scenario #1\r\n   */\r\n  if (!currentAccount) {\r\n    return (\r\n      <div className=\"connect-wallet-container\">\r\n        <button\r\n          className=\"cta-button connect-wallet-button\"\r\n          onClick={connectWalletAction}\r\n        >\r\n          CONNECT WALLET TO PLAY\r\n        </button>\r\n      </div>\r\n    );\r\n    /*\r\n     * Scenario #2\r\n     */\r\n  }\r\n};\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    checkIfWalletIsConnected();\r\n  }, []);\r\n\r\n  /*\r\n * Add this useEffect right under the other useEffect where you are calling checkIfWalletIsConnected\r\n */\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">      \r\n        <div className=\"sound-box\">\r\n          <span className=\"sound-toggle\" \r\n            onClick={() => setIsPlaying(!isPlaying ? true : false)}>\r\n              {isPlaying ? '🔊' : '🔇'} \r\n          </span>\r\n          <span className=\"sound-toggle-no-animation\" \r\n            onClick={() => setIsMetal(!isMetal ? true : false)}>\r\n              {isMetal ? '🎸' : '🪕'}\r\n          </span>\r\n          <span className=\"sound-toggle-no-animation\">\r\n            <a href={\"https://testnets.opensea.io/collection/vikings-v4\"} target=\"_blank\" rel=\"noreferrer\">⛵</a>  \r\n          </span>\r\n          <span className=\"sound-toggle-no-animation\">\r\n            <a href={\"https://github.com/ankurdaharwal/vikings\"} target=\"_blank\" rel=\"noreferrer\">👨🏻‍💻</a>  \r\n          </span>\r\n        </div>\r\n        <div className=\"error\">{metaMaskMsg ? 'You need MetaMask to play!' : ''}</div>\r\n        <div className=\"header glow-text gradient-text\">Vikings\r\n          <p className=\"sub-text\">Fight For Valhalla</p>\r\n        </div>\r\n        {/* 🪓⚔️🛡️🗡️🏹 */}\r\n        {renderContent()}\r\n      </div>\r\n      <Sound\r\n        url={isMetal ? ValhallaMetal: Valhalla}\r\n        playStatus={isPlaying ? Sound.status.PLAYING : Sound.status.STOPPED}\r\n        volume={20}\r\n        loop\r\n      />\r\n      <div className=\"footer-container\">\r\n        <div className=\"footer-text\"></div>\r\n        &copy; 2021 Vikings Created with 🔥 by <b>An1cu12</b>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}