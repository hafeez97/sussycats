[{"D:\\work\\John\\sussycat\\src\\index.js":"1","D:\\work\\John\\sussycat\\src\\App.js":"2","D:\\work\\John\\sussycat\\src\\Components\\LoadingIndicator\\index.js":"3","D:\\work\\John\\sussycat\\src\\Components\\faqs.js":"4"},{"size":230,"mtime":1652950622050,"results":"5","hashOfConfig":"6"},{"size":4703,"mtime":1653083475598,"results":"7","hashOfConfig":"6"},{"size":276,"mtime":1652950621805,"results":"8","hashOfConfig":"6"},{"size":3026,"mtime":1653080733628,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"vuau1l",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"D:\\work\\John\\sussycat\\src\\index.js",[],["21","22"],"D:\\work\\John\\sussycat\\src\\App.js",["23","24","25","26","27","28","29"],"import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport logo from \"./assets/logo.png\"\r\n\r\n// Components\r\nimport LoadingIndicator from './Components/LoadingIndicator';\r\nimport Faqs from \"./Components/faqs\";\r\n\r\n\r\nconst App = () => {\r\n\r\n// State\r\nconst [currentAccount, setCurrentAccount] = useState(null);\r\nconst [connected, setConnected] = useState(false);\r\n  const [phantom, setPhantom] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (\"solana\" in window) {\r\n      setPhantom(window[\"solana\"]);\r\n    }\r\n  }, []);\r\n\r\n\r\n  // Actions\r\n  const checkIfWalletIsConnected = async () => {\r\n    console.log(\"check if wallet is connected\");\r\n  };\r\n\r\n\r\n  const connectWalletAction = async () => {\r\n    console.log(\"connect wallet action\");\r\n    try{\r\n      const res = await window.solana.connect()\r\n      setCurrentAccount(res.publicKey.toString())\r\n      setConnected(true)\r\n    }\r\n    catch (err){\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const disconnectWalletAction =() => {\r\n    window.solana.disconnect()\r\n    setConnected(false)\r\n  };\r\n\r\n  // Render Methods\r\n  const renderContent = () => {\r\n    if (phantom) {\r\n      if(!connected){\r\n        return (\r\n          <div>\r\n            <a onClick={connectWalletAction} href=\"#\" className=\"card\">\r\n              <img src=\"https://thesussycats.netlify.app/assets/img/gif/01.gif\" className=\"card__image\" alt=\"\" />\r\n              <div className=\"card__overlay\">\r\n                <div className=\"card__header\">\r\n                  <svg className=\"card__arc\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path />\r\n                  </svg>\r\n                  <img className=\"card__thumb\" src=\"https://pbs.twimg.com/profile_images/1394116783792025603/jTMcoZRY_400x400.jpg\" alt=\"\" />\r\n                  <div className=\"card__header-text\">\r\n\r\n                    <h3 className=\"card__title\">CONNECT TO PLAY</h3>\r\n                  </div>\r\n                </div>\r\n                <p className=\"card__description\">The connection will take you to sussy cat World <br/><br/><br/></p>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <button onClick={disconnectWalletAction}>disconnect</button>\r\n      )\r\n\r\n\r\n    }\r\n    else{\r\n      return (\r\n        <div>\r\n          <a href=\"https://phantom.app/\"\r\n             target=\"_blank\" className=\"card\">\r\n            {/*<img src=\"https://thesussycats.netlify.app/assets/img/gif/01.gif\" className=\"card__image\" alt=\"\" />*/}\r\n            <img src=\"../src/assets/01.gif\" className=\"card__image\" alt=\"\" />\r\n            <div className=\"card__overlay\">\r\n              <div className=\"card__header\">\r\n                <svg className=\"card__arc\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path />\r\n                </svg>\r\n                <img className=\"card__thumb\" src=\"https://pbs.twimg.com/profile_images/1394116783792025603/jTMcoZRY_400x400.jpg\" alt=\"\" />\r\n                <div className=\"card__header-text\">\r\n\r\n                  <h3 className=\"card__title\">GET PHANTOM</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </a>\r\n        </div>\r\n      )\r\n    }\r\n  };\r\n\r\n// const renderContent = () => {\r\n//   if (isLoading) {\r\n//     return <LoadingIndicator />;\r\n//   }\r\n//   if (!currentAccount) {\r\n//     return (\r\n//       <div className=\"connect-wallet-container\">\r\n//         <button\r\n//           className=\"cta-button connect-wallet-button\"\r\n//           onClick={connectWalletAction}\r\n//         >\r\n//           CONNECT WALLET TO PLAY\r\n//         </button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// };\r\n\r\n  return (\r\n<>\r\n  <div className=\"App\">\r\n\r\n    <div className=\"container\">\r\n\r\n      <div className=\"sound-box\">\r\n        <div style={{marginLeft:\"30px\"}}>\r\n          <img src={logo} height=\"80px \"width=\"80px\"  alt=\"\"/>\r\n        </div>\r\n        <div style={{textAlign:\"right\", marginTop:\"15px\"}}>\r\n          <a href=\"https://discord.com/invite/54j5Dfn6zk\" target=\"_blank\">\r\n            <button className=\"btn\"><i className=\"fab fa-discord\"></i> | Discord</button>\r\n          </a>\r\n          <a href=\"https://twitter.com/CatsSussy\" target=\"_blank\">\r\n            <button className=\"btn\" style={{marginLeft:\"5px\"}}><i className=\"fab fa-twitter\"></i> | Twitter</button>\r\n          </a>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\" header home__title\">Sussy Cats</div>\r\n      <div>\r\n        {renderContent()}\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n    {/*<div className=\"footer-container\">*/}\r\n    {/*  <div className=\"footer-text\"/>*/}\r\n    {/*  &copy; 2022 SUSSYCATS Created with ðŸ”¥ by <b>Metafi</b>*/}\r\n    {/*</div>*/}\r\n\r\n  </div>\r\n  <Faqs/>\r\n\r\n</>\r\n\r\n  );\r\n};\r\n\r\nexport default App;","D:\\work\\John\\sussycat\\src\\Components\\LoadingIndicator\\index.js",[],"D:\\work\\John\\sussycat\\src\\Components\\faqs.js",["30"],"import React, { useState } from \"react\";\r\nimport \"./faqs.css\"\r\nimport Faq from \"react-faq-component\";\r\n\r\nconst Faqs=()=> {\r\n  const [rows, setRowsOption] = useState(null);\r\n  const data = {\r\n    rows: [\r\n      {\r\n        title: \"When will the Sussy Cats collection be launched?\",\r\n        content:\"14th feb. 2022. \"\r\n      },\r\n      {\r\n        title: \"What will be the size of the collection?\",\r\n        content: \"The total supply is 1111, but 40 of them will be used for marketing and giveaways, so 1071 will be available for mint.\"\r\n      },\r\n      {\r\n        title: \"What is the price of one Sussy Cat?\",\r\n        content:\"0.11 SOL. \"\r\n      },\r\n      {\r\n        title: \"What wallet do you recommend?\",\r\n        content: \"We recommend to use the Phantom wallet (https://phantom.app/)\"\r\n      },\r\n      {\r\n        title: \"How can I mint my Sussy Cat?\",\r\n        content: \"You will be able to mint your Sussy Sol Cat by connecting your wallet to our website on the mint date and just hit the mint button! Website: https://sussycats.netlify.app/ (only use our offical link)\"\r\n      },\r\n      {\r\n        title: \"Will you ever dm me first?\",\r\n        content: \"No, we will never dm you first.\"\r\n      },\r\n      {\r\n        title: \"How can I get on the WL?\",\r\n        content: \"The answer is: there is no whitelist.\"\r\n      },\r\n      {\r\n        title: \"Why should I be here or invest into Sussy Sol Cats?\",\r\n        content: \"Our project will be community-focused and driven. Our goal is for everyone to be able to make some money with their initial investment by thriving to keep increasing the floor price. We will take community suggestions and organize holder meetings. Every holder will have a voice.\"\r\n      },\r\n      {\r\n        title: \"Is Sussy Sol Cats a long-term project?\",\r\n        content: \"Absolutely! We are looking forward to launching a second and a third collection!People who will get in early and holders will have a advantage in the upcoming collections and projects. \"\r\n      }\r\n\r\n\r\n    ]\r\n  };\r\n  const styles = {\r\n    bgColor: 'none',\r\n    titleTextColor: \"green\",\r\n    rowTitleColor: \"white\",\r\n    titleTextSize: \"30px\",\r\n    rowTextColor:\"white\",\r\n    rowContentColor:\"white\",\r\n    arrowColor: \"purple\",\r\n    border:\"none\"\r\n\r\n  };\r\n  // useEffect(() => {\r\n  //     if (rows) {\r\n  //         setTimeout(() => {\r\n  //             rows[0].expand();\r\n  //         }, 2500);\r\n\r\n  //         setTimeout(() => {\r\n  //             rows[0].close();\r\n  //         }, 5000);\r\n\r\n  //         setTimeout(() => {\r\n  //             rows[0].scrollIntoView();\r\n  //             // rows[0].scrollIntoView(true);\r\n  //         }, 10000);\r\n  //     }\r\n  // }, [rows]);\r\n\r\n  return (\r\n    <div className=\"Faqs\">\r\n      <div className=\"faq-style-wrapper\">\r\n        <div className=\"box\">\r\n          <h1 style={{textAlign:\"center\", fontSize:\"50px\", color:\"#3cff00\"}}>FAQs</h1>\r\n          <Faq data={data} getRowOptions={setRowsOption} styles={styles} />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Faqs\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":6,"column":8,"nodeType":"37","messageId":"38","endLine":6,"endColumn":24},{"ruleId":"35","severity":1,"message":"39","line":13,"column":8,"nodeType":"37","messageId":"38","endLine":13,"endColumn":22},{"ruleId":"35","severity":1,"message":"40","line":25,"column":9,"nodeType":"37","messageId":"38","endLine":25,"endColumn":33},{"ruleId":"41","severity":1,"message":"42","line":53,"column":13,"nodeType":"43","endLine":53,"endColumn":72},{"ruleId":"44","severity":1,"message":"45","line":81,"column":11,"nodeType":"43","messageId":"46","endLine":82,"endColumn":47,"fix":"47"},{"ruleId":"44","severity":1,"message":"45","line":132,"column":11,"nodeType":"43","messageId":"46","endLine":132,"endColumn":75,"fix":"48"},{"ruleId":"44","severity":1,"message":"45","line":135,"column":11,"nodeType":"43","messageId":"46","endLine":135,"endColumn":67,"fix":"49"},{"ruleId":"35","severity":1,"message":"50","line":6,"column":10,"nodeType":"37","messageId":"38","endLine":6,"endColumn":14},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'LoadingIndicator' is defined but never used.","Identifier","unusedVar","'currentAccount' is assigned a value but never used.","'checkIfWalletIsConnected' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"53","text":"54"},{"range":"55","text":"54"},{"range":"56","text":"54"},"'rows' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2366,2366]," rel=\"noreferrer\"",[3983,3983],[4158,4158]]