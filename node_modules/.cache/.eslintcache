[{"D:\\work\\John\\sussycat\\src\\index.js":"1","D:\\work\\John\\sussycat\\src\\App.js":"2","D:\\work\\John\\sussycat\\src\\Components\\LoadingIndicator\\index.js":"3"},{"size":230,"mtime":1652950622050,"results":"4","hashOfConfig":"5"},{"size":2887,"mtime":1652953061411,"results":"6","hashOfConfig":"5"},{"size":276,"mtime":1652950621805,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vuau1l",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\work\\John\\sussycat\\src\\index.js",[],"D:\\work\\John\\sussycat\\src\\App.js",["15","16","17","18","19","20","21"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport Sound from 'react-sound';\r\nimport Valhalla from './assets/valhalla.mp3';\r\nimport ValhallaMetal from './assets/valhalla_metal.mp3';\r\n\r\nimport { ethers } from 'ethers';\r\nimport './App.css';\r\n\r\n// Components\r\nimport LoadingIndicator from './Components/LoadingIndicator';\r\n\r\n\r\nconst App = () => {\r\n\r\n// State\r\nconst [currentAccount, setCurrentAccount] = useState(null);\r\nconst [characterNFT, setCharacterNFT] = useState(null);\r\nconst [metaMaskMsg, setMetaMaskMsg] = useState(false);\r\nconst [isLoading, setIsLoading] = useState(false);\r\nconst [isPlaying, setIsPlaying] = useState(true);\r\nconst [isMetal, setIsMetal] = useState(true);\r\n\r\n  // Actions\r\n  const checkIfWalletIsConnected = async () => {\r\n    console.log(\"check if wallet is connected\");\r\n  };\r\n\r\n  /*\r\n   * Implement your connectWallet method here\r\n   */\r\n  const connectWalletAction = async () => {\r\n    console.log(\"connect wallet action\");\r\n  };\r\n\r\n  // Render Methods\r\nconst renderContent = () => {\r\n\r\n  if (isLoading) {\r\n    return <LoadingIndicator />;\r\n  }\r\n  \r\n  /*\r\n   * Scenario #1\r\n   */\r\n  if (!currentAccount) {\r\n    return (\r\n      <div className=\"connect-wallet-container\">\r\n        <button\r\n          className=\"cta-button connect-wallet-button\"\r\n          onClick={connectWalletAction}\r\n        >\r\n          CONNECT WALLET TO PLAY\r\n        </button>\r\n      </div>\r\n    );\r\n    /*\r\n     * Scenario #2\r\n     */\r\n  }\r\n};\r\n\r\n  useEffect(() => {\r\n    // setIsLoading(true);\r\n    // checkIfWalletIsConnected();\r\n  }, []);\r\n\r\n  /*\r\n * Add this useEffect right under the other useEffect where you are calling checkIfWalletIsConnected\r\n */\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">      \r\n        <div className=\"sound-box\">\r\n          <span className=\"sound-toggle\" \r\n            onClick={() => setIsPlaying(!isPlaying ? true : false)}>\r\n              {isPlaying ? '🔊' : '🔇'} \r\n          </span>\r\n          <span className=\"sound-toggle-no-animation\" \r\n            onClick={() => setIsMetal(!isMetal ? true : false)}>\r\n              {isMetal ? '🎸' : '🪕'}\r\n          </span>\r\n\r\n        </div>\r\n        <div className=\"error\">{metaMaskMsg ? 'You need MetaMask to play!' : ''}</div>\r\n        <div className=\"header glow-text gradient-text\">SUSSY CATS\r\n          {/*<p className=\"sub-text\">Fight For Valhalla</p>*/}\r\n        </div>\r\n        {/* 🪓⚔️🛡️🗡️🏹 */}\r\n        {renderContent()}\r\n      </div>\r\n      <Sound\r\n        url={isMetal ? ValhallaMetal: Valhalla}\r\n        playStatus={isPlaying ? Sound.status.PLAYING : Sound.status.STOPPED}\r\n        volume={20}\r\n        loop\r\n      />\r\n      <div className=\"footer-container\">\r\n        <div className=\"footer-text\"></div>\r\n        &copy; 2022 sussycats Created with 🔥 by <b>Metafi</b>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","D:\\work\\John\\sussycat\\src\\Components\\LoadingIndicator\\index.js",[],{"ruleId":"22","severity":1,"message":"23","line":7,"column":10,"nodeType":"24","messageId":"25","endLine":7,"endColumn":16},{"ruleId":"22","severity":1,"message":"26","line":17,"column":24,"nodeType":"24","messageId":"25","endLine":17,"endColumn":41},{"ruleId":"22","severity":1,"message":"27","line":18,"column":8,"nodeType":"24","messageId":"25","endLine":18,"endColumn":20},{"ruleId":"22","severity":1,"message":"28","line":18,"column":22,"nodeType":"24","messageId":"25","endLine":18,"endColumn":37},{"ruleId":"22","severity":1,"message":"29","line":19,"column":21,"nodeType":"24","messageId":"25","endLine":19,"endColumn":35},{"ruleId":"22","severity":1,"message":"30","line":20,"column":19,"nodeType":"24","messageId":"25","endLine":20,"endColumn":31},{"ruleId":"22","severity":1,"message":"31","line":25,"column":9,"nodeType":"24","messageId":"25","endLine":25,"endColumn":33},"no-unused-vars","'ethers' is defined but never used.","Identifier","unusedVar","'setCurrentAccount' is assigned a value but never used.","'characterNFT' is assigned a value but never used.","'setCharacterNFT' is assigned a value but never used.","'setMetaMaskMsg' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'checkIfWalletIsConnected' is assigned a value but never used."]